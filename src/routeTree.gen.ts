/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './app/routes/__root'
import { Route as AuthRouteImport } from './app/routes/auth'
import { Route as ProtectedRoutesRouteImport } from './app/routes/_protectedRoutes'
import { Route as ProtectedRoutesIndexRouteImport } from './app/routes/_protectedRoutes/index'
import { Route as ProtectedRoutesDiaryRouteImport } from './app/routes/_protectedRoutes/diary'
import { Route as ProtectedRoutesAddFoodRouteImport } from './app/routes/_protectedRoutes/addFood'

const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedRoutesRoute = ProtectedRoutesRouteImport.update({
  id: '/_protectedRoutes',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedRoutesIndexRoute = ProtectedRoutesIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProtectedRoutesRoute,
} as any)
const ProtectedRoutesDiaryRoute = ProtectedRoutesDiaryRouteImport.update({
  id: '/diary',
  path: '/diary',
  getParentRoute: () => ProtectedRoutesRoute,
} as any)
const ProtectedRoutesAddFoodRoute = ProtectedRoutesAddFoodRouteImport.update({
  id: '/addFood',
  path: '/addFood',
  getParentRoute: () => ProtectedRoutesRoute,
} as any)

export interface FileRoutesByFullPath {
  '/auth': typeof AuthRoute
  '/addFood': typeof ProtectedRoutesAddFoodRoute
  '/diary': typeof ProtectedRoutesDiaryRoute
  '/': typeof ProtectedRoutesIndexRoute
}
export interface FileRoutesByTo {
  '/auth': typeof AuthRoute
  '/addFood': typeof ProtectedRoutesAddFoodRoute
  '/diary': typeof ProtectedRoutesDiaryRoute
  '/': typeof ProtectedRoutesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_protectedRoutes': typeof ProtectedRoutesRouteWithChildren
  '/auth': typeof AuthRoute
  '/_protectedRoutes/addFood': typeof ProtectedRoutesAddFoodRoute
  '/_protectedRoutes/diary': typeof ProtectedRoutesDiaryRoute
  '/_protectedRoutes/': typeof ProtectedRoutesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/auth' | '/addFood' | '/diary' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/auth' | '/addFood' | '/diary' | '/'
  id:
    | '__root__'
    | '/_protectedRoutes'
    | '/auth'
    | '/_protectedRoutes/addFood'
    | '/_protectedRoutes/diary'
    | '/_protectedRoutes/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  ProtectedRoutesRoute: typeof ProtectedRoutesRouteWithChildren
  AuthRoute: typeof AuthRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protectedRoutes': {
      id: '/_protectedRoutes'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRoutesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protectedRoutes/': {
      id: '/_protectedRoutes/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ProtectedRoutesIndexRouteImport
      parentRoute: typeof ProtectedRoutesRoute
    }
    '/_protectedRoutes/diary': {
      id: '/_protectedRoutes/diary'
      path: '/diary'
      fullPath: '/diary'
      preLoaderRoute: typeof ProtectedRoutesDiaryRouteImport
      parentRoute: typeof ProtectedRoutesRoute
    }
    '/_protectedRoutes/addFood': {
      id: '/_protectedRoutes/addFood'
      path: '/addFood'
      fullPath: '/addFood'
      preLoaderRoute: typeof ProtectedRoutesAddFoodRouteImport
      parentRoute: typeof ProtectedRoutesRoute
    }
  }
}

interface ProtectedRoutesRouteChildren {
  ProtectedRoutesAddFoodRoute: typeof ProtectedRoutesAddFoodRoute
  ProtectedRoutesDiaryRoute: typeof ProtectedRoutesDiaryRoute
  ProtectedRoutesIndexRoute: typeof ProtectedRoutesIndexRoute
}

const ProtectedRoutesRouteChildren: ProtectedRoutesRouteChildren = {
  ProtectedRoutesAddFoodRoute: ProtectedRoutesAddFoodRoute,
  ProtectedRoutesDiaryRoute: ProtectedRoutesDiaryRoute,
  ProtectedRoutesIndexRoute: ProtectedRoutesIndexRoute,
}

const ProtectedRoutesRouteWithChildren = ProtectedRoutesRoute._addFileChildren(
  ProtectedRoutesRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  ProtectedRoutesRoute: ProtectedRoutesRouteWithChildren,
  AuthRoute: AuthRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
