/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './pages/__root'
import { Route as TrainingRouteRouteImport } from './pages/training/route'
import { Route as RecipesRouteRouteImport } from './pages/recipes/route'
import { Route as DiaryRouteRouteImport } from './pages/diary/route'
import { Route as DashboardRouteRouteImport } from './pages/dashboard/route'

const TrainingRouteRoute = TrainingRouteRouteImport.update({
  id: '/training',
  path: '/training',
  getParentRoute: () => rootRouteImport,
} as any)
const RecipesRouteRoute = RecipesRouteRouteImport.update({
  id: '/recipes',
  path: '/recipes',
  getParentRoute: () => rootRouteImport,
} as any)
const DiaryRouteRoute = DiaryRouteRouteImport.update({
  id: '/diary',
  path: '/diary',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/dashboard': typeof DashboardRouteRoute
  '/diary': typeof DiaryRouteRoute
  '/recipes': typeof RecipesRouteRoute
  '/training': typeof TrainingRouteRoute
}
export interface FileRoutesByTo {
  '/dashboard': typeof DashboardRouteRoute
  '/diary': typeof DiaryRouteRoute
  '/recipes': typeof RecipesRouteRoute
  '/training': typeof TrainingRouteRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/dashboard': typeof DashboardRouteRoute
  '/diary': typeof DiaryRouteRoute
  '/recipes': typeof RecipesRouteRoute
  '/training': typeof TrainingRouteRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/dashboard' | '/diary' | '/recipes' | '/training'
  fileRoutesByTo: FileRoutesByTo
  to: '/dashboard' | '/diary' | '/recipes' | '/training'
  id: '__root__' | '/dashboard' | '/diary' | '/recipes' | '/training'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  DashboardRouteRoute: typeof DashboardRouteRoute
  DiaryRouteRoute: typeof DiaryRouteRoute
  RecipesRouteRoute: typeof RecipesRouteRoute
  TrainingRouteRoute: typeof TrainingRouteRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/training': {
      id: '/training'
      path: '/training'
      fullPath: '/training'
      preLoaderRoute: typeof TrainingRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/recipes': {
      id: '/recipes'
      path: '/recipes'
      fullPath: '/recipes'
      preLoaderRoute: typeof RecipesRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/diary': {
      id: '/diary'
      path: '/diary'
      fullPath: '/diary'
      preLoaderRoute: typeof DiaryRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  DashboardRouteRoute: DashboardRouteRoute,
  DiaryRouteRoute: DiaryRouteRoute,
  RecipesRouteRoute: RecipesRouteRoute,
  TrainingRouteRoute: TrainingRouteRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
