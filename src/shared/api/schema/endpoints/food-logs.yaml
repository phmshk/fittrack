components:
  schemas:
    FoodLog:
      type: object
      required:
        - id
        - date
        - mealType
        - name
        - calories
        - proteins
        - fats
        - carbs
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier (generated by the server).
          readOnly: true
        date:
          type: string
          format: date
          description: Date of the entry in YYYY-MM-DD format.
          example: "2025-09-16"
        mealType:
          type: string
          description: Meal type.
          enum: [breakfast, lunch, dinner, snacks]
        name:
          type: string
          description: Name of the food item.
          example: "Chicken Salad"
        calories:
          type: number
          description: Number of calories.
          example: 150
        proteins:
          type: number
          description: Number of proteins (in grams).
          example: 5
        fats:
          type: number
          description: Number of fats (in grams).
          example: 3
        carbs:
          type: number
          description: Number of carbs (in grams).
          example: 27
    FoodLogInput:
      type: object
      required:
        - date
        - mealType
        - name
        - calories
      # This model is used for creating and updating food log entries.
      # It is almost identical to FoodLog, but without id field.
      properties:
        date:
          $ref: "#/components/schemas/FoodLog/properties/date"
        mealType:
          $ref: "#/components/schemas/FoodLog/properties/mealType"
        name:
          $ref: "#/components/schemas/FoodLog/properties/name"
        calories:
          $ref: "#/components/schemas/FoodLog/properties/calories"
        proteins:
          $ref: "#/components/schemas/FoodLog/properties/proteins"
        fats:
          $ref: "#/components/schemas/FoodLog/properties/fats"
        carbs:
          $ref: "#/components/schemas/FoodLog/properties/carbs"

  createFoodLog:
    summary: Add a new food log entry
    description: Creates a new entry for a consumed food item.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/FoodLogInput"
    responses:
      "201": # Created
        description: Successfully created.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FoodLog"
      "401": # Unauthorized
        description: Authentication error. The user does not have permission to access this resource.
        content:
          application/json:
            schema:
              $ref: "../shared/responses.yaml#/components/responses/UnauthorizedError"

  getFoodLogsByDate:
    summary: Get entries for a specific day
    description: Retrieves all food log entries for the specified date.
    parameters:
      - name: date
        in: path
        required: true
        description: Date in YYYY-MM-DD format
        schema:
          type: string
          format: date
    responses:
      "200": # OK
        description: Successful response with a list of entries.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/FoodLog"
      "401": # Unauthorized
        description: Authentication error. The user does not have permission to access this resource.
        content:
          application/json:
            schema:
              $ref: "../shared/responses.yaml#/components/responses/UnauthorizedError"

  updateFoodLog:
    summary: Update an existing entry
    parameters:
      - name: id
        in: path
        required: true
        description: Entry ID to update
        schema:
          type: string
          format: uuid
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/FoodLogInput"
    responses:
      "200": # OK
        description: Entry successfully updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FoodLog"
      "401": # Unauthorized
        description: Authentication error. The user does not have permission to access this resource.
        content:
          application/json:
            schema:
              $ref: "../shared/responses.yaml#/components/responses/UnauthorizedError"
      "404": # Not Found
        description: Entry with such ID not found.
        content:
          application/json:
            schema:
              $ref: "../shared/responses.yaml#/components/responses/NotFoundError"

  deleteFoodLog:
    summary: Delete an entry
    parameters:
      - name: id
        in: path
        required: true
        description: Entry ID to delete
        schema:
          type: string
          format: uuid
    responses:
      "204": # No Content
        description: Entry successfully deleted.
      "401": # Unauthorized
        description: Authentication error. The user does not have permission to access this resource.
        content:
          application/json:
            schema:
              $ref: "../shared/responses.yaml#/components/responses/UnauthorizedError"
      "404": # Not Found
        description: Entry with such ID not found.
        content:
          application/json:
            schema:
              $ref: "../shared/responses.yaml#/components/responses/NotFoundError"
