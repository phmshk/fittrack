/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/food-logs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Add a new food log entry
         * @description Creates a new entry for a consumed food item.
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["FoodLogInput"];
                };
            };
            responses: {
                /** @description Successfully created. */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["FoodLog"];
                    };
                };
                /** @description Authentication error. The user does not have permission to access this resource. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["UnauthorizedError"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/food-logs/{date}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get entries for a specific day
         * @description Retrieves all food log entries for the specified date.
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Date in YYYY-MM-DD format */
                    date: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Successful response with a list of entries. */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["FoodLog"][];
                    };
                };
                /** @description Authentication error. The user does not have permission to access this resource. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["UnauthorizedError"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/food-logs/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update an existing entry */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Entry ID to update */
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["FoodLogInput"];
                };
            };
            responses: {
                /** @description Entry successfully updated. */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["FoodLog"];
                    };
                };
                /** @description Authentication error. The user does not have permission to access this resource. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["UnauthorizedError"];
                    };
                };
                /** @description Entry with such ID not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["NotFoundError"];
                    };
                };
            };
        };
        post?: never;
        /** Delete an entry */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Entry ID to delete */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Entry successfully deleted. */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Authentication error. The user does not have permission to access this resource. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["UnauthorizedError"];
                    };
                };
                /** @description Entry with such ID not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["NotFoundError"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /**
         * Format: date
         * @description Date of the entry in YYYY-MM-DD format.
         * @example 2025-09-16
         */
        date: string;
        /**
         * @description Meal type.
         * @enum {string}
         */
        mealType: "breakfast" | "lunch" | "dinner" | "snacks";
        /**
         * @description Name of the food item.
         * @example Chicken Salad
         */
        name: string;
        /**
         * @description Number of calories.
         * @example 150
         */
        calories: number;
        /**
         * @description Number of proteins (in grams).
         * @example 5
         */
        proteins: number;
        /**
         * @description Number of fats (in grams).
         * @example 3
         */
        fats: number;
        /**
         * @description Number of carbs (in grams).
         * @example 27
         */
        carbs: number;
        FoodLogInput: {
            date: components["schemas"]["date"];
            mealType: components["schemas"]["mealType"];
            name: components["schemas"]["name"];
            calories: components["schemas"]["calories"];
            proteins?: components["schemas"]["proteins"];
            fats?: components["schemas"]["fats"];
            carbs?: components["schemas"]["carbs"];
        };
        FoodLog: {
            /**
             * Format: uuid
             * @description Unique identifier (generated by the server).
             */
            readonly id: string;
            /**
             * Format: date
             * @description Date of the entry in YYYY-MM-DD format.
             * @example 2025-09-16
             */
            date: string;
            /**
             * @description Meal type.
             * @enum {string}
             */
            mealType: "breakfast" | "lunch" | "dinner" | "snacks";
            /**
             * @description Name of the food item.
             * @example Chicken Salad
             */
            name: string;
            /**
             * @description Number of calories.
             * @example 150
             */
            calories: number;
            /**
             * @description Number of proteins (in grams).
             * @example 5
             */
            proteins: number;
            /**
             * @description Number of fats (in grams).
             * @example 3
             */
            fats: number;
            /**
             * @description Number of carbs (in grams).
             * @example 27
             */
            carbs: number;
        };
        /** @description Authentication error. The user does not have permission to access this resource. */
        UnauthorizedError: unknown;
        /** @description Resource not found. The requested resource does not exist. */
        NotFoundError: unknown;
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
